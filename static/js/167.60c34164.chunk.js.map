{"version":3,"file":"static/js/167.60c34164.chunk.js","mappings":"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","sources":["components/Filter.jsx","components/PhonebookForm.jsx","components/contactList.jsx","pages/Contacts.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Text,\n  Input,\n  Flex,\n} from '@chakra-ui/react/dist/chakra-ui-react.cjs';\n\nexport const Filter = ({ value, onChange }) => (\n  <label>\n    <Flex alignItems=\"center\" mb=\"20px\" boxShadow=\"base\" rounded=\"md\" p=\"10px\">\n      <Text pr=\"10px\" textAlign= 'center' fontWeight= 'bold'>Find contacts by name</Text>\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        placeholder=\"Username\"\n      />\n    </Flex>\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Container,\n  Input,\n  Stack,\n  Text,\n} from '@chakra-ui/react/dist/chakra-ui-react.cjs';\n\nconst { useState } = require('react');\n\nexport const PhonebookForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const options = {\n    name: value => setName(value),\n    number: value => setNumber(value),\n  };\n\n  const handleChange = ev => {\n    const { name, value } = ev.currentTarget;\n    options[name](value);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  // считування інформації з інпуту і\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    // Перекидаємо в Арр\n    const newContact = { id: nanoid(), name, number };\n    onSubmit(newContact);\n    reset();\n  };\n\n  return (\n    <Container boxShadow=\"base\" p=\"10px\" rounded=\"md\" >\n      <form onSubmit={handleSubmit}>\n        <Stack spacing={5}>\n          <label>\n            <Text pl=\"10px\" pb=\"3px\" fontWeight=\"bold\">\n              Name\n            </Text>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              value={name}\n              onChange={handleChange}\n            />\n          </label>\n\n          <label>\n            <Text pl=\"10px\" pb=\"3px\" fontWeight=\"bold\">\n              Number\n            </Text>\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Number\"\n              pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              value={number}\n              onChange={handleChange}\n            />\n          </label>\n          <Button type=\"submit\" colorScheme=\"teal\" variant=\"outline\">\n            Add contact\n          </Button>\n        </Stack>\n      </form>\n    </Container>\n  );\n};\n\nPhonebookForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Flex,\n  Spacer,\n  Avatar,\n  Text,\n} from '@chakra-ui/react/dist/chakra-ui-react.cjs';\n\nexport const ContactList = ({ dataContacts, onDelateContact }) => {\n  return (\n    <div>\n      <Flex flexDirection=\"column\" gap=\"2\">\n        {dataContacts &&\n          dataContacts.map(({ id, name, number }) => (\n            <Flex\n              name={id}\n              key={id}\n              boxShadow=\"base\"\n              p=\"2\"\n              rounded=\"lg\"\n              alignItems=\"center\"\n            >\n              <Avatar size=\"sm\" name={name} />\n              <Box ml=\"10px\" w=\"50%\">\n                <Text>{name}</Text>{' '}\n              </Box>\n              <Spacer />\n              <Box w=\"50%\"> {number}</Box>\n              <Spacer />\n              <Button\n                w=\"10%\"\n                size=\"xs\"\n                type=\"button\"\n                colorScheme=\"red\"\n                ml=\"10px\"\n                variant=\"outline\"\n                onClick={() => onDelateContact(id)}\n              >\n                Delete\n              </Button>\n            </Flex>\n          ))}\n      </Flex>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  dataContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  onDelateContact: PropTypes.func.isRequired,\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { useEffect } from 'react';\n\n// Components\nimport { Filter } from '../components/Filter';\nimport { PhonebookForm } from '../components/PhonebookForm';\nimport { ContactList } from '../components/contactList';\n\nimport { setFilter } from '../redux/filterSlice';\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n} from '../redux/operations/operations';\nimport {\n  Box,\n  Center,\n  Heading,\n  Divider,\n} from '@chakra-ui/react/dist/chakra-ui-react.cjs';\n// ******************\n\nexport default function Contacts() {\n  const contacts = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const error = useSelector(state => state.contacts.error);\n\n  // Add contact and check repetability of contact--------------\n  const addContactAll = dataContact => {\n    if (\n      contacts.some(\n        contact =>\n          contact.name.toLowerCase() === dataContact.name.toLowerCase() ||\n          contact.number === dataContact.number\n      )\n    ) {\n      Swal.fire(\n        `${dataContact.name} or ${dataContact.number} is already in contacts.`\n      );\n      return;\n    }\n    // звернення до редакс стору з записом контакту\n    dispatch(addContact(dataContact));\n  };\n  // ***************\n\n  // filter contact---------------\n  const changeFilter = ev => {\n    dispatch(setFilter(ev.currentTarget.value));\n  };\n  // ***************\n  // Видалення контакту---\n  const onDelateContact = id => {\n    dispatch(deleteContact(id));\n  };\n  // ******************\n  // метод фільтрації контактів\n  const normalizedFilter = useSelector(state => state.filter).toLowerCase();\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  // ****************\n  // Зверненя до АРІ\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const visibleContacts = getVisibleContacts();\n  // *******************\n\n  return (\n    <div>\n      {isLoading && !error && <b>Request in progress...</b>}\n      <Center>\n        <Box\n          borderWidth=\"1px\"\n          borderRadius=\"lg\"\n          overflow=\"hidden\"\n          boxShadow=\"dark-lg\"\n          p=\"6\"\n          w=\"70%\"\n          mt=\"25px\"\n        >\n          <Center>\n            <Heading as=\"h2\" my=\"30px\" size=\"lg\">\n              Phonebook\n            </Heading>\n          </Center>\n          <PhonebookForm onSubmit={addContactAll} />\n          <Divider p=\"15px\" w=\"90\" />\n          <Center>\n            <Heading as=\"h2\" my=\"20px\" size=\"md\">\n              Contacts\n            </Heading>\n          </Center>\n          <Filter value={normalizedFilter} onChange={changeFilter} />\n          <ContactList\n            dataContacts={visibleContacts}\n            onDelateContact={onDelateContact}\n          />\n        </Box>\n      </Center>\n    </div>\n  );\n}\n"],"names":["Filter","_ref","value","onChange","_jsx","children","_jsxs","Flex","alignItems","mb","boxShadow","rounded","p","Text","pr","textAlign","fontWeight","Input","type","placeholder","useState","require","PhonebookForm","onSubmit","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","options","handleChange","ev","_ev$currentTarget","currentTarget","Container","preventDefault","newContact","id","nanoid","Stack","spacing","pl","pb","pattern","title","required","Button","colorScheme","variant","ContactList","dataContacts","onDelateContact","flexDirection","gap","map","_ref2","Avatar","size","Box","ml","w","Spacer","onClick","Contacts","contacts","useSelector","state","items","dispatch","useDispatch","isLoading","error","normalizedFilter","filter","toLowerCase","useEffect","fetchContacts","visibleContacts","contact","includes","Center","borderWidth","borderRadius","overflow","mt","Heading","as","my","dataContact","some","Swal","concat","addContact","Divider","setFilter","deleteContact"],"sourceRoot":""}